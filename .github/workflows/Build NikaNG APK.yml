name: Build NikaNG APK

permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:
      NikaNG_VERSION:
        description: 'NikaNG version'
        required: true

      XRAY_VERSION:
        description: "Fill in Xray-core's commit hash or short hash. Default: HEAD~0 (latest commit)."
        required: true
        type: string
        default: 'HEAD~0'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: üõ†Ô∏è Checkout NikaNG repo
      uses: actions/checkout@v4
      with:
        repository: 'mahsanet/NikaNG'

    - name: download latest Mahsa-core aar
    - name: üì± Setup Android environment
      uses: robinraju/release-downloader@v1
      uses: android-actions/setup-android@v3
      with:
        repository: 'GFW-knocker/AndroidLibXrayLite'
        latest: true
        fileName: 'libv2ray.aar'
        out-file-path: '${{ github.workspace }}/V2rayNG/app/libs/'


    - name: üõ†Ô∏è Checkout Xray-core repo
      uses: actions/checkout@v4
      with:
        repository: 'GFW-knocker/xray-core'
        path: 'xray-core'
        fetch-depth: '0'

    - name: üìö Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        cache: gradle

    - name: üêπ Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: 'stable'
        cache: false

    - name: üì¶ Install gomobile
      run: |
        go install golang.org/x/mobile/cmd/gomobile@latest
        echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

    - name: üì± Setup Android environment
      uses: android-actions/setup-android@v3

    - name: üîë Get xray short sha
      run: | 
        cd xray-core
        git checkout ${{ inputs.XRAY_VERSION }}
        echo "XRAY_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - name: üèóÔ∏è Build dependencies
      run: |
        mkdir ${{ github.workspace }}/build
        cd ${{ github.workspace }}/build
        git clone --depth=1 -b main https://github.com/GFW-knocker/AndroidLibXrayLite.git
        cd AndroidLibXrayLite
        go get github.com/GFW-knocker/Xray-core@${{ github.event.inputs.XRAY_CORE_VERSION }} || true
        gomobile init
        go mod tidy -v
        gomobile bind -v -androidapi 21 -ldflags='-s -w' ./
        cp *.aar ${{ github.workspace }}/V2rayNG/app/libs/

    - name: üèóÔ∏è Build APK
      run: |
        cd ${{ github.workspace }}/V2rayNG
        chmod 755 gradlew
        ./gradlew assembleDebug

    - name: üîê Sign APK files
      uses: ilharp/sign-android-release@v1
      with:
        releaseDir: V2rayNG/app/build/outputs/apk/release/
        signingKey: ${{ secrets.SIGNING_KEY }}
        keyAlias: ${{ secrets.SIGNING_KEY_ALIAS }}
        keyStorePassword: ${{ secrets.SIGNING_STORE_PASSWORD }}
        keyPassword: ${{ secrets.SIGNING_KEY_PASSWORD }}
        buildToolsVersion: 34.0.0

    - name: üì§ Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: APKs
        path: V2rayNG/app/build/outputs/apk/release/NikaNG_*-signed.apk

    - name: üöÄ Upload APK to Release
      uses: softprops/action-gh-release@v2
      with:
        name: v2rayNG_${{ github.event.inputs.NikaNG_VERSION }}_${{ env.XRAY_SHA }}
        tag_name: v${{ github.event.inputs.NikaNG_VERSION }}_${{ env.XRAY_SHA }}
        body: v2rayNG ${{ github.event.inputs.NikaNG_VERSION }} with xray [${{ env.XRAY_SHA }}](https://github.com/GFW-knocker/xray-core/commit/${{ env.XRAY_SHA }})
        files: V2rayNG/app/build/outputs/apk/release/NikaNG_*-signed.apk
